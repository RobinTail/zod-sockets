asyncapi: 2.5.0
info:
  title: Example API
  version: 0.10.0
  contact:
    name: Anna Bocharova
    url: https://robintail.cz
    email: me@robintail.cz
  license:
    name: MIT
  description: AsyncAPI documentation example
tags: []
servers:
  example:
    url: ws://example.com
    protocol: ws
channels:
  /:
    description: / namespace
    bindings:
      ws:
        method: GET
        bindingVersion: 0.1.0
        headers:
          type: object
          properties:
            connection:
              type: string
              enum:
                - Upgrade
            upgrade:
              type: string
              enum:
                - websocket
        query:
          type: object
          properties:
            EIO:
              type: integer
              format: int64
              exclusiveMinimum: 0
              maximum: 9007199254740991
            transport:
              type: string
              enum:
                - websocket
    subscribe:
      operationId: out/
      description: The messages produced by the application within the / namespace
      message:
        oneOf:
          - name: time
            title: time
            messageId: out//time
            payload:
              type: object
              format: tuple
              properties:
                "0":
                  type: string
                  description: current ISO time
          - name: chat
            title: chat
            messageId: out//chat
            payload:
              type: object
              format: tuple
              properties:
                "0":
                  type: string
                  description: message
                "1":
                  type: object
                  properties:
                    from:
                      type: string
                      description: the ID of author
                  required:
                    - from
                  description: extra info
          - name: rooms
            title: rooms
            messageId: out//rooms
            payload:
              type: object
              format: tuple
              properties:
                "0":
                  type: array
                  items:
                    type: string
                  description: room IDs
    publish:
      operationId: in/
      description: The messages consumed by the application within the / namespace
      message:
        oneOf:
          - name: chat
            title: chat
            messageId: in//chat
            payload:
              type: object
              format: tuple
              properties:
                "0":
                  type: string
                  description: message
          - name: ping
            title: ping
            messageId: in//ping
            payload:
              type: object
              format: tuple
              properties: {}
          - name: subscribe
            title: subscribe
            messageId: in//subscribe
            payload:
              type: object
              format: tuple
              properties: {}
components: {}
id: "urn:example:com::"
defaultContentType: text/plain
