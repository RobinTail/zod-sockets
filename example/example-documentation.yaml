asyncapi: 3.0.0
info:
  title: Example APP
  version: 0.14.0
  contact:
    name: Anna Bocharova
    url: https://robintail.cz
    email: me@robintail.cz
  license:
    name: MIT
  description: AsyncAPI documentation example
id: urn:example:com:socket.io
defaultContentType: text/plain
servers:
  example:
    host: example.com
    pathname: /socket.io
    protocol: https
channels:
  Root:
    address: /
    title: Namespace /
    bindings:
      ws:
        bindingVersion: 0.1.0
        method: GET
        headers:
          type: object
          properties:
            connection:
              type: string
              enum:
                - Upgrade
            upgrade:
              type: string
              enum:
                - websocket
        query:
          type: object
          properties:
            EIO:
              type: string
              enum:
                - "4"
              description: The version of the protocol
            transport:
              type: string
              enum:
                - polling
                - websocket
              description: The name of the transport
            sid:
              type: string
              description: The session identifier
          required:
            - EIO
            - transport
          externalDocs:
            description: Engine.IO Protocol
            url: https://socket.io/docs/v4/engine-io-protocol/
    messages:
      rootOutgoingTime:
        name: time
        title: time
        payload:
          type: object
          format: tuple
          properties:
            "0":
              type: string
              description: current ISO time
              examples:
                - 2024-03-28T21:13:15.084Z
          required:
            - "0"
          additionalProperties: false
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": 2024-03-28T21:13:15.084Z
      rootOutgoingChat:
        name: chat
        title: chat
        payload:
          type: object
          format: tuple
          properties:
            "0":
              type: string
              description: message
              examples:
                - Hello there!
            "1":
              type: object
              properties:
                from:
                  type: string
                  description: the ID of author
              required:
                - from
              description: extra info
              examples:
                - &a1
                  from: 123abc
          required:
            - "0"
            - "1"
          additionalProperties: false
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": Hello there!
              "1": *a1
      rootOutgoingRooms:
        name: rooms
        title: rooms
        payload:
          type: object
          format: tuple
          properties:
            "0":
              type: array
              items:
                type: string
              description: room IDs
              examples:
                - &a2
                  - room1
                  - room2
                - &a3
                  - room3
                  - room4
                  - room5
          required:
            - "0"
          additionalProperties: false
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": *a2
          - summary: Implies array (tuple)
            payload:
              "0": *a3
      rootIncomingChat:
        name: chat
        title: chat
        payload:
          type: object
          format: tuple
          properties:
            "0":
              type: string
              description: message
              examples:
                - Hello there
          required:
            - "0"
          additionalProperties: false
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": Hello there
      rootIncomingPing:
        name: ping
        title: ping
        payload:
          type: object
          format: tuple
          properties: {}
          required: []
          additionalProperties:
            format: any
            description: Anything
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": something
      rootAckForIncomingPing:
        title: Acknowledgement for ping
        payload:
          type: object
          format: tuple
          properties:
            "0":
              type: string
              enum:
                - pong
              description: literally
              examples:
                - pong
          required:
            - "0"
          additionalProperties:
            format: any
            description: echo
        examples:
          - summary: Implies array (tuple)
            payload:
              "0": pong
              "1": something
      rootIncomingSubscribe:
        name: subscribe
        title: subscribe
        payload:
          type: object
          format: tuple
          properties: {}
          required: []
          additionalProperties:
            format: any
            description: Does not matter
components: {}
operations:
  RootSendOperationTime:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingTime"
    title: time
    summary: Outgoing event time
    description: The message produced by the application within the / namespace
  RootSendOperationChat:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingChat"
    title: chat
    summary: Outgoing event chat
    description: The message produced by the application within the / namespace
  RootSendOperationRooms:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingRooms"
    title: rooms
    summary: Outgoing event rooms
    description: The message produced by the application within the / namespace
  RootRecvOperationChat:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingChat"
    title: chat
    summary: Incoming event chat
    description: The message consumed by the application within the / namespace
  RootRecvOperationPing:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingPing"
    title: ping
    summary: Incoming event ping
    description: The message consumed by the application within the / namespace
    reply:
      address:
        location: $message.payload#
        description: "Last argument: acknowledgement handler"
      channel:
        $ref: "#/channels/Root"
      messages:
        - $ref: "#/channels/Root/messages/rootAckForIncomingPing"
  RootRecvOperationSubscribe:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingSubscribe"
    title: subscribe
    summary: Incoming event subscribe
    description: The message consumed by the application within the / namespace
