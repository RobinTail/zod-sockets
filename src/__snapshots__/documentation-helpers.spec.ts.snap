// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Documentation helpers > depictAny() > should set format:any 1`] = `
{
  "format": "any",
}
`;

exports[`Documentation helpers > depictArray() > should set type:array and pass items depiction 1`] = `
{
  "items": {
    "type": "boolean",
  },
  "type": "array",
}
`;

exports[`Documentation helpers > depictBigInt() > should set type:integer and format:bigint 1`] = `
{
  "format": "bigint",
  "type": "integer",
}
`;

exports[`Documentation helpers > depictBoolean() > should set type:boolean 1`] = `
{
  "type": "boolean",
}
`;

exports[`Documentation helpers > depictBranded > should pass the next depicter 1`] = `
{
  "minLength": 2,
  "type": "string",
}
`;

exports[`Documentation helpers > depictCatch() > should pass next depicter 1`] = `
{
  "type": "boolean",
}
`;

exports[`Documentation helpers > depictDate > should set format date 0 1`] = `
{
  "format": "date",
}
`;

exports[`Documentation helpers > depictDate > should set format date 1 1`] = `
{
  "format": "date",
}
`;

exports[`Documentation helpers > depictDefault() > should set default property 1`] = `
{
  "default": true,
  "type": "boolean",
}
`;

exports[`Documentation helpers > depictDiscriminatedUnion() > should wrap next depicters in oneOf prop and set discriminator prop 1`] = `
{
  "discriminator": {
    "propertyName": "status",
  },
  "oneOf": [
    {
      "properties": {
        "data": {
          "format": "any",
        },
        "status": {
          "enum": [
            "success",
          ],
          "type": "string",
        },
      },
      "required": [
        "status",
      ],
      "type": "object",
    },
    {
      "properties": {
        "error": {
          "properties": {
            "message": {
              "type": "string",
            },
          },
          "required": [
            "message",
          ],
          "type": "object",
        },
        "status": {
          "enum": [
            "error",
          ],
          "type": "string",
        },
      },
      "required": [
        "status",
        "error",
      ],
      "type": "object",
    },
  ],
}
`;

exports[`Documentation helpers > depictEffect() > should depict as 'number (out)' 1`] = `
{
  "type": "number",
}
`;

exports[`Documentation helpers > depictEffect() > should depict as 'object (refinement)' 1`] = `
{
  "properties": {
    "s": {
      "type": "string",
    },
  },
  "required": [
    "s",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictEffect() > should depict as 'string (in)' 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictEffect() > should depict as 'string (preprocess)' 1`] = `
{
  "format": "string (preprocessed)",
}
`;

exports[`Documentation helpers > depictEffect() > should handle edge cases 1`] = `
{
  "format": "any",
}
`;

exports[`Documentation helpers > depictEffect() > should handle edge cases 2`] = `
{
  "format": "any",
}
`;

exports[`Documentation helpers > depictEnum() > should set type and enum properties 1`] = `
{
  "enum": [
    "one",
    "two",
  ],
  "type": "string",
}
`;

exports[`Documentation helpers > depictEnum() > should set type and enum properties 2`] = `
{
  "enum": [
    "ONE",
    "TWO",
  ],
  "type": "string",
}
`;

exports[`Documentation helpers > depictIntersection() > should fall back to allOf in other cases 0 1`] = `
{
  "allOf": [
    {
      "additionalProperties": {
        "format": "double",
        "maximum": 1.7976931348623157e+308,
        "minimum": -1.7976931348623157e+308,
        "type": "number",
      },
      "type": "object",
    },
    {
      "properties": {
        "test": {
          "format": "double",
          "maximum": 1.7976931348623157e+308,
          "minimum": -1.7976931348623157e+308,
          "type": "number",
        },
      },
      "required": [
        "test",
      ],
      "type": "object",
    },
  ],
}
`;

exports[`Documentation helpers > depictIntersection() > should fall back to allOf in other cases 1 1`] = `
{
  "allOf": [
    {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    {
      "enum": [
        5,
      ],
      "type": "number",
    },
  ],
}
`;

exports[`Documentation helpers > depictIntersection() > should flatten three object schemas 1`] = `
{
  "properties": {
    "one": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "three": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "two": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
  },
  "required": [
    "one",
    "two",
    "three",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictIntersection() > should flatten two object schemas 1`] = `
{
  "properties": {
    "one": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "two": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictIntersection() > should maintain uniqueness in the array of required props 1`] = `
{
  "properties": {
    "test": {
      "enum": [
        5,
      ],
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
  },
  "required": [
    "test",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictIntersection() > should merge deeply 1`] = `
{
  "properties": {
    "test": {
      "properties": {
        "a": {
          "format": "double",
          "maximum": 1.7976931348623157e+308,
          "minimum": -1.7976931348623157e+308,
          "type": "number",
        },
        "b": {
          "format": "double",
          "maximum": 1.7976931348623157e+308,
          "minimum": -1.7976931348623157e+308,
          "type": "number",
        },
      },
      "required": [
        "a",
        "b",
      ],
      "type": "object",
    },
  },
  "required": [
    "test",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictLiteral() > should set type and involve enum property 1`] = `
{
  "enum": [
    "testing",
  ],
  "type": "string",
}
`;

exports[`Documentation helpers > depictNull() > should give type:null 1`] = `
{
  "type": "null",
}
`;

exports[`Documentation helpers > depictNullable() > should add null to the type 0 1`] = `
{
  "type": [
    "string",
    "null",
  ],
}
`;

exports[`Documentation helpers > depictNullable() > should add null to the type 1 1`] = `
{
  "type": [
    "string",
    "null",
  ],
}
`;

exports[`Documentation helpers > depictNullable() > should only add null type once 0 1`] = `
{
  "type": [
    "string",
    "null",
  ],
}
`;

exports[`Documentation helpers > depictNullable() > should only add null type once 1 1`] = `
{
  "type": [
    "null",
  ],
}
`;

exports[`Documentation helpers > depictNullable() > should only add null type once 2 1`] = `
{
  "type": [
    "string",
    "null",
  ],
}
`;

exports[`Documentation helpers > depictNumber() > should type:number, min/max, format and exclusiveness props 1`] = `
{
  "format": "double",
  "maximum": 1.7976931348623157e+308,
  "minimum": -1.7976931348623157e+308,
  "type": "number",
}
`;

exports[`Documentation helpers > depictNumber() > should type:number, min/max, format and exclusiveness props 2`] = `
{
  "format": "int64",
  "maximum": 20,
  "minimum": 10,
  "type": "integer",
}
`;

exports[`Documentation helpers > depictObject() > Bug #758 1`] = `
{
  "properties": {
    "a": {
      "type": "string",
    },
    "b": {
      "type": "string",
    },
    "c": {
      "type": [
        "string",
        "null",
      ],
    },
  },
  "required": [
    "a",
    "b",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictObject() > should type:object, properties and required props 0 1`] = `
{
  "properties": {
    "a": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "b": {
      "type": "string",
    },
  },
  "required": [
    "a",
    "b",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictObject() > should type:object, properties and required props 1 1`] = `
{
  "properties": {
    "a": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "b": {
      "type": "string",
    },
  },
  "required": [
    "a",
    "b",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictObject() > should type:object, properties and required props 2 1`] = `
{
  "properties": {
    "a": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "b": {
      "type": "string",
    },
  },
  "required": [
    "a",
    "b",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictObject() > should type:object, properties and required props 3 1`] = `
{
  "properties": {
    "a": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "b": {
      "type": "string",
    },
  },
  "required": [
    "a",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictObject() > should type:object, properties and required props 4 1`] = `
{
  "properties": {
    "a": {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
    "b": {
      "type": [
        "string",
        "null",
      ],
    },
  },
  "type": "object",
}
`;

exports[`Documentation helpers > depictObjectProperties() > should wrap next depicters in a shape of object 1`] = `
{
  "one": {
    "type": "string",
  },
  "two": {
    "type": "boolean",
  },
}
`;

exports[`Documentation helpers > depictOptional() > should pass the next depicter 0 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictOptional() > should pass the next depicter 1 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictPipeline > should depict as 'boolean (out)' 1`] = `
{
  "type": "boolean",
}
`;

exports[`Documentation helpers > depictPipeline > should depict as 'string (in)' 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictReadonly > should pass the next depicter 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 0 1`] = `
{
  "additionalProperties": {
    "type": "boolean",
  },
  "type": "object",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 1 1`] = `
{
  "additionalProperties": {
    "type": "boolean",
  },
  "type": "object",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 2 1`] = `
{
  "properties": {
    "one": {
      "type": "boolean",
    },
    "two": {
      "type": "boolean",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 3 1`] = `
{
  "properties": {
    "testing": {
      "type": "boolean",
    },
  },
  "required": [
    "testing",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 4 1`] = `
{
  "properties": {
    "one": {
      "type": "boolean",
    },
    "two": {
      "type": "boolean",
    },
  },
  "required": [
    "one",
    "two",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictRecord() > should set properties+required or additionalProperties props 5 1`] = `
{
  "additionalProperties": {
    "format": "any",
  },
  "type": "object",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 0 1`] = `
{
  "format": "email",
  "maxLength": 20,
  "minLength": 10,
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 1 1`] = `
{
  "format": "url",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 2 1`] = `
{
  "format": "uuid",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 3 1`] = `
{
  "format": "cuid",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 4 1`] = `
{
  "format": "date-time",
  "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 5 1`] = `
{
  "format": "date-time",
  "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}:\\d{2})|Z)$",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set format, pattern and min/maxLength props 6 1`] = `
{
  "pattern": "^\\d+.\\d+.\\d+$",
  "type": "string",
}
`;

exports[`Documentation helpers > depictString() > should set type:string 1`] = `
{
  "type": "string",
}
`;

exports[`Documentation helpers > depictTuple() > should depict as an object with numeric keys 1`] = `
{
  "additionalProperties": false,
  "format": "tuple",
  "properties": {
    "0": {
      "type": "boolean",
    },
    "1": {
      "type": "string",
    },
    "2": {
      "enum": [
        "test",
      ],
      "type": "string",
    },
  },
  "required": [
    "0",
    "1",
    "2",
  ],
  "type": "object",
}
`;

exports[`Documentation helpers > depictUnion() > should wrap next depicters into oneOf property 1`] = `
{
  "oneOf": [
    {
      "type": "string",
    },
    {
      "format": "double",
      "maximum": 1.7976931348623157e+308,
      "minimum": -1.7976931348623157e+308,
      "type": "number",
    },
  ],
}
`;
