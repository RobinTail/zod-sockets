asyncapi: 3.0.0
info:
  title: Example APP
  version: 5.0.0-beta.0
  contact:
    name: Anna Bocharova
    url: https://robintail.cz
    email: me@robintail.cz
  license:
    name: MIT
  description: AsyncAPI documentation example
id: urn:example:com:socket.io
defaultContentType: text/plain
servers:
  example:
    host: example.com
    pathname: /socket.io
    protocol: https
channels:
  Root:
    address: /
    title: Namespace /
    bindings:
      ws:
        bindingVersion: 0.1.0
        method: GET
        headers:
          type: object
          properties:
            connection:
              type: string
              const: Upgrade
            upgrade:
              type: string
              const: websocket
        query:
          type: object
          properties:
            EIO:
              description: The version of the protocol
              type: string
              const: "4"
            transport:
              description: The name of the transport
              type: string
              enum:
                - polling
                - websocket
            sid:
              description: The session identifier
              type: string
          required:
            - EIO
            - transport
          externalDocs:
            description: Engine.IO Protocol
            url: https://socket.io/docs/v4/engine-io-protocol/
    messages:
      rootOutgoingTime:
        name: time
        title: time
        payload:
          type: array
          prefixItems:
            - description: current ISO time
              examples:
                - 2024-03-28T21:13:15.084Z
              type: string
          items:
            not: {}
        examples:
          - payload:
              - 2024-03-28T21:13:15.084Z
      rootOutgoingChat:
        name: chat
        title: chat
        payload:
          type: array
          prefixItems:
            - description: message
              examples:
                - Hello there!
              type: string
            - description: extra info
              examples:
                - from: 123abc
                  features:
                    - name: visitor
              type: object
              properties:
                from:
                  description: the ID of author
                  type: string
                features:
                  type: array
                  items:
                    $ref: "#/components/schemas/Schema1"
              required:
                - from
                - features
              additionalProperties: false
          items:
            not: {}
        examples:
          - payload:
              - Hello there!
              - from: 123abc
                features:
                  - name: visitor
      rootOutgoingRooms:
        name: rooms
        title: rooms
        payload:
          type: array
          prefixItems:
            - description: room IDs
              examples:
                - - room1
                  - room2
                - - room3
                  - room4
                  - room5
              type: array
              items:
                type: string
          items:
            not: {}
        examples:
          - payload:
              - - room1
                - room2
      rootOutgoingError:
        name: error
        title: error
        payload:
          type: array
          prefixItems:
            - description: name
              examples:
                - InputValidationError
              type: string
            - description: message
              examples:
                - "[1]: Required"
              type: string
          items:
            not: {}
        examples:
          - payload:
              - InputValidationError
              - "[1]: Required"
      rootIncomingChat:
        name: chat
        title: chat
        payload:
          type: array
          prefixItems:
            - description: message
              examples:
                - Hello there
              type: string
          items:
            not: {}
        examples:
          - payload:
              - Hello there
      rootIncomingPing:
        name: ping
        title: ping
        payload:
          type: array
          prefixItems: []
          items:
            description: Anything
            examples:
              - something
        examples:
          - payload:
              - something
      rootAckForIncomingPing:
        title: Acknowledgement for ping
        payload:
          type: array
          prefixItems:
            - description: literally
              examples:
                - pong
              type: string
              const: pong
          items:
            description: echo
            examples:
              - something
        examples:
          - payload:
              - pong
              - something
      rootIncomingSubscribe:
        name: subscribe
        title: subscribe
        payload:
          type: array
          prefixItems: []
          items:
            description: Does not matter
      rootIncomingUnsubscribe:
        name: unsubscribe
        title: unsubscribe
        payload:
          type: array
          prefixItems: []
          items:
            description: Does not matter
components:
  schemas:
    Schema1:
      type: object
      properties:
        name:
          type: string
        features:
          type: array
          items:
            $ref: "#/components/schemas/Schema1"
      required:
        - name
      additionalProperties: false
operations:
  RootSendOperationTime:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingTime"
    title: time
    summary: Outgoing event time
    description: The message produced by the application within the / namespace
  RootSendOperationChat:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingChat"
    title: chat
    summary: Outgoing event chat
    description: The message produced by the application within the / namespace
  RootSendOperationRooms:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingRooms"
    title: rooms
    summary: Outgoing event rooms
    description: The message produced by the application within the / namespace
  RootSendOperationError:
    action: send
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootOutgoingError"
    title: error
    summary: Outgoing event error
    description: The message produced by the application within the / namespace
  RootRecvOperationChat:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingChat"
    title: chat
    summary: Incoming event chat
    description: The message consumed by the application within the / namespace
  RootRecvOperationPing:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingPing"
    title: ping
    summary: Incoming event ping
    description: The message consumed by the application within the / namespace
    reply:
      address:
        location: $message.payload#
        description: "Last argument: acknowledgement handler"
      channel:
        $ref: "#/channels/Root"
      messages:
        - $ref: "#/channels/Root/messages/rootAckForIncomingPing"
  RootRecvOperationSubscribe:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingSubscribe"
    title: subscribe
    summary: Incoming event subscribe
    description: The message consumed by the application within the / namespace
  RootRecvOperationUnsubscribe:
    action: receive
    channel:
      $ref: "#/channels/Root"
    messages:
      - $ref: "#/channels/Root/messages/rootIncomingUnsubscribe"
    title: unsubscribe
    summary: Incoming event unsubscribe
    description: The message consumed by the application within the / namespace
